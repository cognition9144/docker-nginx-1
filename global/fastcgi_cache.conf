# # Cache by default.
set $no_cache_uris 0;
set $no_cache_cookie 0;

# fastcgi_cache_methods deal with methods.
# URL's with query parameters are just as cacheable!
# # Boilerplate from WP Codex
# # POST requests and urls with a query string should always go to PHP
# if ($request_method = POST) {
# 	set $no_cache 1;
# }   
# if ($query_string != "") {
#   set $no_cache 1;
# }   

# Boilerplate from WP Codex
# Don't cache uris containing the following segments
# WTF? Why would we *not* cache sitemaps?
if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
  set $no_cache_uris "uris";
}   

# Boilerplate from WP Codex
# Don't use the cache for logged in users or recent commenters
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
  set $no_cache_cookie "cookie";
} 

# Defines conditions under which the response will not be taken from a cache.
fastcgi_cache_bypass $no_cache_uris $no_cache_cookie;

# Defines conditions under which the response will not be saved to a cache.
fastcgi_no_cache $no_cache_uris $no_cache_cookie;

# Defines the shared memory zone used for caching.
fastcgi_cache microcache;

# Sets caching time for different response codes.
# If only caching time is specified then only 200, 301, and 302 responses are cached. 
# Cache all response types, as a cached 404 is just a valuable as a cached 200.
fastcgi_cache_valid any 1m;

# Add a useful diagnostic headers.
add_header X-Cache $upstream_cache_status;
add_header X-No-Cache "$no_cache_uris $no_cache_cookie";
add_header X-FastCGI $upstream_addr;

# This is a robust solution for path info security issue and works with 
# "cgi.fix_pathinfo = 1" in /etc/php.ini (default)
fastcgi_split_path_info ^(.+\.php)(/.+)$;
if (!-f $document_root$fastcgi_script_name) {
	return 404;
}

# Include server default params
include fastcgi_params;

# 
fastcgi_index index.php;

# Set this for PHP
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

# fastcgi_intercept_errors on;
fastcgi_pass fastcgi;

